<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191013 11:22:23.501" generator="Robot 3.1.2 (Python 3.5.3 on linux)">
<suite id="s1" name="TC01 GetRequest" source="/home/carolina/Documents/automacao/Rest-API-Testing-using-Robot-Framework-Python/TestCases/TC01_GetRequest.robot">
<test id="s1-t1" name="Get_weatherInfo">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>myssion</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20191013 11:22:23.668" level="INFO">Creating Session using : alias=myssion, url=http://restapi.demoqa.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20191013 11:22:23.668" starttime="20191013 11:22:23.668"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>myssion</arg>
<arg>/utilities/weather/city/${city}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20191013 11:22:24.149" level="INFO">Get Request using : alias=myssion, uri=/utilities/weather/city/Delhi, headers=None json=None</msg>
<msg timestamp="20191013 11:22:24.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20191013 11:22:24.149" starttime="20191013 11:22:23.669"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${status_code}</var>
</assign>
<msg timestamp="20191013 11:22:24.150" level="INFO">${status_code} = 200</msg>
<status status="PASS" endtime="20191013 11:22:24.150" starttime="20191013 11:22:24.150"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${status_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191013 11:22:24.150" starttime="20191013 11:22:24.150"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20191013 11:22:24.151" level="INFO">${body} = {
    "City": "Delhi",
    "Temperature": "29.35 Degree celsius",
    "Humidity": "45 Percent",
    "WeatherDescription": "haze",
    "WindSpeed": "2.1 Km per hour",
    "WindDirectionDegree": "350 De...</msg>
<status status="PASS" endtime="20191013 11:22:24.151" starttime="20191013 11:22:24.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${body}</arg>
<arg>${city}</arg>
</arguments>
<status status="PASS" endtime="20191013 11:22:24.151" starttime="20191013 11:22:24.151"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${response.headers}</arg>
<arg>Content-Type</arg>
</arguments>
<assign>
<var>${contentTypeValue}</var>
</assign>
<msg timestamp="20191013 11:22:24.152" level="INFO">${contentTypeValue} = application/json</msg>
<status status="PASS" endtime="20191013 11:22:24.152" starttime="20191013 11:22:24.151"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${contentTypeValue}</arg>
<arg>application/json</arg>
</arguments>
<status status="PASS" endtime="20191013 11:22:24.152" starttime="20191013 11:22:24.152"></status>
</kw>
<status status="PASS" endtime="20191013 11:22:24.152" critical="yes" starttime="20191013 11:22:23.667"></status>
</test>
<doc>Suite description</doc>
<status status="PASS" endtime="20191013 11:22:24.153" starttime="20191013 11:22:23.502"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat id="s1" name="TC01 GetRequest" fail="0" pass="1">TC01 GetRequest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
